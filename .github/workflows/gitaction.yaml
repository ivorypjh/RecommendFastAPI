name: recommend system with fast api

# push, pr 이 발생했을 때 수행
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# AWS role 을 사용하기 위한 permission 추가
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

# ECR, ECS 사용을 위한 환경 변수 추가
env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: recommendsystem
  ECS_SERVICE: RecommendSystemV6
  ECS_CLUSTER: recommendcluster                 
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: recommendsystem

jobs:
  build:
    # 우분투 사용
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
        # 파이썬 지정
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

        # 의존성 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker Compose
        run: docker-compose

      # AWS의 role 사용
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: # 자신의 IAM에 추가한 역할의 arn 사용
          role-to-assume: arn:aws:iam::851528909564:role/RecommendSystem
          role-session-name: RecommendSession # session 이름은 상관 없음
          aws-region: ap-northeast-2

                
      # ECR 관련 부분 추가           
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
  
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true